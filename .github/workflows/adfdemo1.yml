name: my_workflow
on: 
  push:
    branches:
      - adf_collaboration
    paths: 
      #- code/datafactory/credential/*
      - code/datafactory/dataflow/*
      - code/datafactory/dataset/*
      - code/datafactory/factory/*
      - code/datafactory/integrationRuntime/*
      - code/datafactory/linkedService/*
      #- code/datafactory/managedVirtualNetwork/*
      - code/datafactory/pipeline/*
      - code/datafactory/trigger/*
    
  workflow_dispatch:
env:
  # Variables subject to change depending on target
  tenantId: eab91f23-3244-40aa-8e73-a1e0e1e22949
  #sourceSubscriptionId: 24e4b4be-7875-429e-9548-fdc3241c1683
  destinationSubscriptionId: 24e4b4be-7875-429e-9548-fdc3241c1683
  sourceResourceGroupName: rgdemo101
  sourceFactoryName: adfdemo1010
  destinationResourceGroupName: rgdemo101
  destinationFactoryName: adedemo2020
  armParameterFile: ARMTemplateParametersForFactory.json
  #factoryDirectory: code/datafactory
  artifactName: adf_armtemplate

jobs:
  validate_and_generate:
    runs-on: ubuntu-latest
    steps:
      # Checkout current branch
      - name: Checkout 
        uses: actions/checkout@v1
       # Initiate connection to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 
          enable-AzPSSession: true        
     # Get Secrets from Key Vault
      - id: getSecrets1
        name: Get Key Vault Secrets
        uses: Azure/get-keyvault-secrets@v1
        with: 
          keyvault: AzKeyVault1010
          secrets: 'sourceSubscriptionId'
      - id: getSecrets2
        name: Get Key Vault Secrets
        uses: Azure/get-keyvault-secrets@v1
        with: 
          keyvault: AzKeyVault1010
          secrets: 'factoryDirectory'   
      # Install Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      # Install npm packages saved in package.json file in the build
      - name: Install npm package
        run: npm install
      # Validate all ADF resources
      - name: Validate
        run: npm run build validate $factoryDirectory $npmstring
        env:
          npmstring: /subscriptions/"${{ steps.getSecrets1.outputs.sourceSubscriptionId }}"/resourceGroups/$sourceResourceGroupName/providers/Microsoft.DataFactory/factories/$sourceFactoryName
          factoryDirectory: "${{ steps.getSecrets2.outputs.factoryDirectory }}"
      # Generate ARM Template
      - name: Generate ARM Template
        run: npm run build export $factoryDirectory /subscriptions/"${{ steps.getSecrets.outputs.sourceSubscriptionId }}"/resourceGroups/$sourceResourceGroupName/providers/Microsoft.DataFactory/factories/$sourceFactoryName $artifactName
      # Copy parameters files for destination data factory
      #- name: Copy Applicable Parameter File
      #  run: cp "$factoryDirectory/$armParameterFile" $artifactName
      # List artifact files
      - name: List Artifact Files
        run: ls $artifactName
      # Upload ARM Template to Workflow Artifacts
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.artifactName }}
          path: ${{ env.artifactName }}
  deploy:
    needs: validate_and_generate
    environment: PRD # !! Change depending on target environment
    runs-on: ubuntu-latest
    steps:
      # Download ARM Template from Workflow Artifacts
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.artifactName }}
          path: ${{ env.artifactName }}
      # Initiate connection to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 
          enable-AzPSSession: true 
      # Validate ARM Template
      - name: Validate Deployment
        uses:  azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.destinationSubscriptionId }}
          resourceGroupName: ${{ env.destinationResourceGroupName }}
          template: ${{ env.artifactName }}/ARMTemplateForFactory.json
          parameters: ${{ env.artifactName }}/${{ env.armParameterFile }}
          deploymentMode: Validate
      # Execute Adf Pre-Deployment Script
      - name: Pre-Deployment Script
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-Location ${{ env.artifactName }}
            ./PrePostDeploymentScript.ps1 `
              -armTemplate ARMTemplateForFactory.json `
              -ResourceGroupName ${{ env.destinationResourceGroupName }} `
              -DataFactoryName ${{ env.destinationFactoryName }} `
              -predeployment $true `
              -deleteDeployment $false
          azPSVersion: latest
      # Deploy ARM Template
      - name: Deployment 
        uses: azure/powershell@v1
        with:
          inlineScript: |
            New-AzResourceGroupDeployment `
              -ResourceGroupName ${{ env.destinationResourceGroupName }} `
              -TemplateFile ${{ env.artifactName }}/ARMTemplateForFactory.json `
              -TemplateParameterFile ${{ env.artifactName }}/${{ env.armParameterFile }} `
              -factoryName adedemo2020 `
              -Verbose
          azPSVersion: latest
      # Execute Adf Post-Deployment Script
      - name: Post-Deployment Script
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-Location ${{ env.artifactName }}
            ./PrePostDeploymentScript.ps1 `
              -armTemplate ARMTemplateForFactory.json `
              -ResourceGroupName ${{ env.destinationResourceGroupName }} `
              -DataFactoryName ${{ env.destinationFactoryName }} `
              -predeployment $false `
              -deleteDeployment $false
          azPSVersion: latest 
      # Checkout current branch
      - name: Checkout 
        uses: actions/checkout@v1
