name: Testing_Workflow_Passing_Secrets
on: 
  push:
    #branches:
      #- uat
  .....................................  
  workflow_dispatch:

env:
  # Variables subject to change depending on target
  tenantId: eab91f23-3244-40aa-8e73-a1e0e1e22949
  sourceSubscriptionId: 24e4b4be-7875-429e-9548-fdc3241c1683
  destinationSubscriptionId: 24e4b4be-7875-429e-9548-fdc3241c1683
  sourceResourceGroupName: rgdemo101
  sourceFactoryName: adfdemo1010
  destinationResourceGroupName: rgdemo101
  destinationFactoryName: adedemo2020
  armParameterFile: ARMTemplateParametersForFactory.json
  factoryDirectory: code/datafactory
  artifactName: adf_armtemp1
  
  

jobs:
  validate_and_generate:
    environment: uat
    runs-on: ubuntu-latest
    env:
      npmString: /subscriptions/$sourceSubscriptionId/resourceGroups/$sourceResourceGroupName/providers/Microsoft.DataFactory/factories/$sourceFactoryName
      
    steps:
      # Checkout current branch
      - name: Checkout 
        uses: actions/checkout@v1
      # Install Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      # Install npm packages saved in package.json file in the build
      - name: Install npm package
        run: npm install
      # Validate all ADF resources
      - name: Validate
        run: npm run build validate $factoryDirectory $npmString
      # Generate ARM Template
      - name: Generate ARM Template
        run: npm run build export $factoryDirectory $npmString $artifactName
      # Copy parameters files for destination data factory
      #- name: Copy Applicable Parameter File
      #  run: cp "$factoryDirectory/$armParameterFile" $artifactName
      # List artifact files
      - name: List Artifact Files
        run: ls $artifactName
      # Upload ARM Template to Workflow Artifacts
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.artifactName }}
          path: ${{ env.artifactName }}
  deploy:
    needs: validate_and_generate
    environment: uat # !! Change depending on target environment
    runs-on: ubuntu-latest
    steps:
      # Download ARM Template from Workflow Artifacts
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.artifactName }}
          path: ${{ env.artifactName }}
      # Initiate connection to Azure
      - name: 'Az CLI login'
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlinescript: |
            az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
            az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # Validate ARM Template
      - name: Validate Deployment
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az group deployment validate --resource-group ${{ env.destinationResourceGroupName }} --template-file ${{ env.artifactName }}/ARMTemplateForFactory.json --parameters ${{ env.artifactName }}/${{ env.armParameterFile }} --handle-extended-json-format
      # Execute Adf Pre-Deployment Script
      - name: Pre-Deployment Script
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-Location ${{ env.artifactName }}
            ./PrePostDeploymentScript.ps1 `
              -armTemplate ARMTemplateForFactory.json `
              -ResourceGroupName ${{ env.destinationResourceGroupName }} `
              -DataFactoryName ${{ env.destinationFactoryName }} `
              -predeployment $true `
              -deleteDeployment $false
          azPSVersion: latest
      # Deploy ARM Template
      - name: Deployment 
        uses: azure/powershell@v1
        with:
          inlineScript: |
            New-AzResourceGroupDeployment `
              -ResourceGroupName ${{ env.destinationResourceGroupName }} `
              -TemplateFile ${{ env.artifactName }}/ARMTemplateForFactory.json `
              -TemplateParameterFile ${{ env.artifactName }}/${{ env.armParameterFile }} `
              -factoryName adedemo2020 `
              -Verbose
          azPSVersion: latest
      # Execute Adf Post-Deployment Script
      - name: Post-Deployment Script
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-Location ${{ env.artifactName }}
            ./PrePostDeploymentScript.ps1 `
              -armTemplate ARMTemplateForFactory.json `
              -ResourceGroupName ${{ env.destinationResourceGroupName }} `
              -DataFactoryName ${{ env.destinationFactoryName }} `
              -predeployment $false `
              -deleteDeployment $false
          azPSVersion: latest
